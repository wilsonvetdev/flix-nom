[{"/Users/WN/Desktop/Flatiron/code/projects/flix-nom/src/index.js":"1","/Users/WN/Desktop/Flatiron/code/projects/flix-nom/src/reportWebVitals.js":"2","/Users/WN/Desktop/Flatiron/code/projects/flix-nom/src/App.js":"3","/Users/WN/Desktop/Flatiron/code/projects/flix-nom/src/components/SearchForm.js":"4"},{"size":499,"mtime":1610651278370,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1610648569139,"results":"7","hashOfConfig":"6"},{"size":951,"mtime":1610653537632,"results":"8","hashOfConfig":"6"},{"size":680,"mtime":1610652448259,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"u4bgf1",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"/Users/WN/Desktop/Flatiron/code/projects/flix-nom/src/index.js",[],["22","23"],"/Users/WN/Desktop/Flatiron/code/projects/flix-nom/src/reportWebVitals.js",[],"/Users/WN/Desktop/Flatiron/code/projects/flix-nom/src/App.js",["24","25","26"],"import React, { useState, useEffect } from 'react'\nimport { Container, Grid, Header } from 'semantic-ui-react'\nimport axios from 'axios'\nimport SearchForm from './components/SearchForm'\n\nfunction App() {\n\n  const API_KEY = process.env.REACT_APP_MOVIE_API_KEY\n\n  const [query, setQuery] = useState('')\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    searchMovies(query)\n  }, [query])\n\n  const doSearch = input => setQuery(input)\n\n  const searchMovies = async(input) => {\n    if(input){\n      try {\n        let response = await axios.get(`http://www.omdbapi.com/?&apikey=${API_KEY}&type=movie&s=${input}`)\n        setData(response.data.results)\n        console.log(data)\n      } catch(error) {\n        console.error('Error fetching and parsing data', error)\n      }\n    }\n  }\n\n  return (\n    <Container>\n      <Header as='h1' style={{padding: '1rem'}}>Flix Noms</Header>\n      <SearchForm />\n    </Container>\n  );\n}\n\nexport default App;\n","/Users/WN/Desktop/Flatiron/code/projects/flix-nom/src/components/SearchForm.js",["27"],"import React, { useState } from 'react'\nimport { Form, Button } from 'semantic-ui-react'\n\nconst SearchForm = props => {\n\n    const [input, setInputValue] = useState('')\n\n    const handleChange = (event) => { \n        // Update state \n        setInputValue(event.target.value)\n    }\n\n    const doTheSearch = (event) => {\n        console.log(event.target.value)\n    }\n\n    return (\n        <Form onChange={doTheSearch}>\n        <Form.Input type=\"search\"\n            onChange={handleChange}\n            name=\"search\"\n            placeholder=\"Search for movies...\"\n        />\n        <Button type=\"submit\" id=\"submit\">search</Button>\n        </Form>\n    )\n}\n\nexport default SearchForm",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":2,"column":21,"nodeType":"36","messageId":"37","endLine":2,"endColumn":25},{"ruleId":"38","severity":1,"message":"39","line":15,"column":6,"nodeType":"40","endLine":15,"endColumn":13,"suggestions":"41"},{"ruleId":"34","severity":1,"message":"42","line":17,"column":9,"nodeType":"36","messageId":"37","endLine":17,"endColumn":17},{"ruleId":"34","severity":1,"message":"43","line":6,"column":12,"nodeType":"36","messageId":"37","endLine":6,"endColumn":17},{"ruleId":"30","replacedBy":"44"},{"ruleId":"32","replacedBy":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchMovies'. Either include it or remove the dependency array.","ArrayExpression",["48"],"'doSearch' is assigned a value but never used.","'input' is assigned a value but never used.",["46"],["47"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [query, searchMovies]",{"range":"51","text":"52"},[390,397],"[query, searchMovies]"]